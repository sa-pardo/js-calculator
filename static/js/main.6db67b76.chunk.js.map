{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","useState","input","setInput","handleClick","e","target","textContent","eval","replace","terms","split","pop","includes","className","id","buttons","map","button","Button","value","props","onClick","color"],"mappings":"2MAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,0qBCde,SAASY,MAAO,IAAD,UACFG,oDAAS,IADP,+LACrBC,MADqB,cACdC,SADc,cAGtBC,YAAc,SAAdA,YAAeC,GACnB,OAAQA,EAAEC,OAAOC,aACf,IAAK,IAEHJ,SAASK,KAAKN,MAAMO,QAAQ,8BAA8B,QAC1D,MACF,IAAK,KACHN,SAAS,KACT,MACF,IAAK,IACH,IAAIO,MAAQR,MAAMS,MAAM,YACnBD,MAAME,MAAMC,SAAS,MACxBV,SAASD,MAAQG,EAAEC,OAAOC,aAE5B,MACF,QAEIJ,SADY,MAAVD,MACOG,EAAEC,OAAOC,YAETL,MAAQG,EAAEC,OAAOC,eAMlC,OACE,mEAAKO,UAAU,MAAf,UACE,kEAAKC,GAAG,UAAR,SAAmBb,QAClBc,QAAQC,KAAI,SAACC,GACZ,OACE,2DAACC,OAAD,CAEEJ,GAAIG,EAAOH,GACXK,MAAOF,EAAOE,MACdhB,YAAaA,aAHRc,EAAOH,UAWxB,IAAMI,OAAS,SAACE,GACd,OACE,qEAAQN,GAAIM,EAAMN,GAAIO,QAASD,EAAMjB,YAArC,SACGiB,EAAMD,SAKPJ,QAAU,CACd,CACED,GAAI,OACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,MACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,MACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,QACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,OACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,OACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,MACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,QACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,QACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,OACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,SACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,MACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,WACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,SACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,WACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,UACJK,MAAO,IACPG,MAAO,IAET,CACER,GAAI,QACJK,MAAO,KACPG,MAAO,O","file":"static/js/main.6db67b76.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from \"react\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n\n  const handleClick = (e) => {\n    switch (e.target.textContent) {\n      case \"=\":\n        // eslint-disable-next-line no-eval\n        setInput(eval(input.replace(/([+\\-/*])([+\\-/*]*)([+/*])/g,\"$3\")));\n        break;\n      case \"AC\":\n        setInput(\"0\");\n        break;\n      case \".\":\n        let terms = input.split(/[+\\-/*]/g);\n        if (!terms.pop().includes(\".\")) {\n          setInput(input + e.target.textContent);\n        }\n        break;\n      default:\n        if (input === \"0\") {\n          setInput(e.target.textContent);\n        } else {\n          setInput(input + e.target.textContent);\n        }\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"display\">{input}</div>\n      {buttons.map((button) => {\n        return (\n          <Button\n            key={button.id}\n            id={button.id}\n            value={button.value}\n            handleClick={handleClick}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nconst Button = (props) => {\n  return (\n    <button id={props.id} onClick={props.handleClick}>\n      {props.value}\n    </button>\n  );\n};\n\nconst buttons = [\n  {\n    id: \"zero\",\n    value: \"0\",\n    color: \"\",\n  },\n  {\n    id: \"one\",\n    value: \"1\",\n    color: \"\",\n  },\n  {\n    id: \"two\",\n    value: \"2\",\n    color: \"\",\n  },\n  {\n    id: \"three\",\n    value: \"3\",\n    color: \"\",\n  },\n  {\n    id: \"four\",\n    value: \"4\",\n    color: \"\",\n  },\n  {\n    id: \"five\",\n    value: \"5\",\n    color: \"\",\n  },\n  {\n    id: \"six\",\n    value: \"6\",\n    color: \"\",\n  },\n  {\n    id: \"seven\",\n    value: \"7\",\n    color: \"\",\n  },\n  {\n    id: \"eight\",\n    value: \"8\",\n    color: \"\",\n  },\n  {\n    id: \"nine\",\n    value: \"9\",\n    color: \"\",\n  },\n  {\n    id: \"equals\",\n    value: \"=\",\n    color: \"\",\n  },\n  {\n    id: \"add\",\n    value: \"+\",\n    color: \"\",\n  },\n  {\n    id: \"subtract\",\n    value: \"-\",\n    color: \"\",\n  },\n  {\n    id: \"divide\",\n    value: \"/\",\n    color: \"\",\n  },\n  {\n    id: \"multiply\",\n    value: \"*\",\n    color: \"\",\n  },\n  {\n    id: \"decimal\",\n    value: \".\",\n    color: \"\",\n  },\n  {\n    id: \"clear\",\n    value: \"AC\",\n    color: \"\",\n  },\n];\n"],"sourceRoot":""}